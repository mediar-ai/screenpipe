[target.x86_64-pc-windows-msvc]
rustflags = [
  "-C",
  "target-feature=+crt-static",
  "-C",
  "link-args=/DEFAULTLIB:ucrt.lib /DEFAULTLIB:libvcruntime.lib libcmt.lib",
  "-C",
  "link-args=/NODEFAULTLIB:libvcruntimed.lib /NODEFAULTLIB:vcruntime.lib /NODEFAULTLIB:vcruntimed.lib",
  "-C",
  "link-args=/NODEFAULTLIB:libcmtd.lib /NODEFAULTLIB:msvcrt.lib /NODEFAULTLIB:msvcrtd.lib",
  "-C",
  "link-args=/NODEFAULTLIB:libucrt.lib /NODEFAULTLIB:libucrtd.lib /NODEFAULTLIB:ucrtd.lib",

]

[target.x86_64-unknown-linux-gnu]
rustflags = ["-C", "link-arg=-Wl,--allow-multiple-definition"]

# make this work :'( - atm dirty hack: cp screenpipe-vision/lib* /usr/local/lib
# [env]
# DYLD_LIBRARY_PATH = { value = "${CARGO_MANIFEST_DIR}/screenpipe-vision/lib", relative = true }

# [target.'cfg(target_os = "macos")']
# rustflags = [
#     "-C", "link-arg=-Wl,-rpath,@executable_path/screenpipe-vision/lib",
#     "-C", "link-arg=-Wl,-rpath,@loader_path/screenpipe-vision/lib",
#     "-C", "link-arg=-Wl,-rpath,${CARGO_MANIFEST_DIR}/screenpipe-vision/lib"
# ]

[target.aarch64-apple-darwin]
rustflags = ["-L", "screenpipe-vision/lib"]

[target.x86_64-apple-darwin]
rustflags = ["-L", "screenpipe-vision/lib"]


